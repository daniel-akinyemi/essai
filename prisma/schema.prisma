generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DIRECT_URL")
  schemas   = ["public"]
}

model User {
  id        String    @id @default(cuid())
  firstName String?
  lastName  String?
  name      String?
  email     String    @unique
  password  String
  apiKey    String?   @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  accounts  Account[]
  essays    Essay[]
  sessions  Session[]
  userSettings UserSettings?

  @@map("users")
  @@schema("public")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
  @@schema("public")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
  @@schema("public")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
  @@schema("public")
}

model Essay {
  id          String   @id @default(cuid())
  userId      String
  topic       String
  content     String
  type        String
  score       Int
  feedback    String
  submittedAt DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("essays")
  @@schema("public")
}

model UserSettings {
  id                    String   @id @default(cuid())
  userId                String   @unique
  emailNotifications    Boolean  @default(true)
  showWritingTips       Boolean  @default(true)
  theme                 String   @default("system")
  language              String   @default("en")
  autoSaveFrequency     String   @default("30")
  writingStyle          String   @default("academic")
  defaultEssayType      String   @default("argumentative")
  essayLength           String   @default("medium")
  analyticsEnabled      Boolean  @default(true)
  dataSharing           Boolean  @default(false)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  user                  User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_settings")
  @@schema("public")
}
