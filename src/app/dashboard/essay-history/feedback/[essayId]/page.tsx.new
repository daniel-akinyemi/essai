"use client";
import { useRouter } from "next/navigation";
import { useEffect, useState, use } from "react";
import { Loader2, ArrowLeft } from "lucide-react";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";

interface FeedbackPageProps {
  params: { essayId: string };
}

// Server Component that fetches params
async function getParams(params: { essayId: string }) {
  return params;
}

export default function FeedbackPage({ params }: FeedbackPageProps) {
  const router = useRouter();
  // Use React.use() to unwrap the params promise
  const { essayId } = use(getParams(params));
  const [essay, setEssay] = useState<any>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");

  useEffect(() => {
    if (!essayId) return;
    setLoading(true);
    fetch(`/api/essays?id=${essayId}`)
      .then(async (res) => {
        if (!res.ok) throw new Error("Failed to fetch essay");
        const data = await res.json();
        setEssay(data.essays?.[0] || null);
      })
      .catch((err) => setError(err.message))
      .finally(() => setLoading(false));
  }, [essayId]);

  if (loading) return <div className="flex items-center justify-center min-h-[40vh]"><Loader2 className="animate-spin w-8 h-8 text-indigo-500" /></div>;
  if (error) return <div className="text-red-500 text-center mt-8">{error}</div>;
  if (!essay) return <div className="text-gray-500 text-center mt-8">Essay not found.</div>;

  return (
    <div className="container mx-auto px-4 py-8">
      <Button
        variant="ghost"
        onClick={() => router.back()}
        className="mb-6"
      >
        <ArrowLeft className="mr-2 h-4 w-4" /> Back to Essays
      </Button>
      
      <Card className="mb-8">
        <CardHeader>
          <CardTitle>Essay Feedback</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-6">
            <div>
              <h3 className="text-lg font-medium">Topic</h3>
              <p className="text-gray-600">{essay.topic}</p>
            </div>
            
            <div>
              <h3 className="text-lg font-medium">Your Essay</h3>
              <div className="mt-2 p-4 bg-gray-50 rounded-md">
                <pre className="whitespace-pre-wrap font-sans">{essay.content}</pre>
              </div>
            </div>
            
            {essay.feedback && (
              <div>
                <h3 className="text-lg font-medium">Feedback</h3>
                <div className="mt-2 p-4 bg-blue-50 rounded-md">
                  <p className="whitespace-pre-line">{essay.feedback}</p>
                </div>
              </div>
            )}
            
            {essay.score !== null && (
              <div>
                <h3 className="text-lg font-medium">Score</h3>
                <div className="mt-2">
                  <div className="w-full bg-gray-200 rounded-full h-2.5">
                    <div 
                      className="bg-indigo-600 h-2.5 rounded-full" 
                      style={{ width: `${essay.score}%` }}
                    ></div>
                  </div>
                  <p className="mt-2 text-sm text-gray-600">{essay.score}%</p>
                </div>
              </div>
            )}
          </div>
        </CardContent>
      </Card>
    </div>
  );
}
